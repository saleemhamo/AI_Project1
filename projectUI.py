import os
from IDAstar import *
from PyQt5.QtCore import QEventLoop, QTimer
from PyQt5.QtWidgets import QMessageBox
from PyQt5 import QtCore, QtGui, QtWidgets

number_of_states = 0
input_initial_state = []
n = 4
initial_state = State(generate_initial_state(n), None, 0)
plot_board(initial_state, "Initial State", "initial_state", n)
custom_initial_state_done = False


class Ui_MainWindow(object):

	def __init__(self):
		pass

	def information(self):
		global n
		global sol
		global initial_state
		global cutoff_values
		global number_of_states

		msg = QMessageBox()
		msg.setWindowTitle("Problem Formulation")
		# msg.setText("Problem Formulation")
		msg.setText("The problem is solved via Iterative Deepening A* Algorithm.\n"
			     "This case has a dimension of {}*{}.\n\n"
			     "Initial State:    {}.\n"
			     "Final State:     {}.\n\n"
			     "Operators: Next states were generated by moving one \nqueen, i.e: Each step is considered as a unit in the cost.\n\n"
			     "Total path cost  (initial -> goal):  {} steps.\n"
			     "Number of States (inital -> goal): {} states.\n"
			     "Sequence of cutoff values for each iteration: {}."
			     "".format(n, n, initial_state.queens, sol.queens, sol.total_cost, number_of_states,
					 cutoff_values))
		# msg.setIcon(QMessageBox.Information)
		msg.setStyleSheet(
			"QLabel{min-width:1400 px;min-height:700 px; font: 20pt \"Arial Rounded MT Bold\";} QPushButton{ width:250px; font-size: 18px; }");

		x = msg.exec_()

	def custom_initial_state(self):
		self.MainWindow2 = QtWidgets.QMainWindow()
		self.ui2 = Ui_MainWindow2()
		self.ui2.setupUi(self.MainWindow2)
		self.MainWindow2.show()

	def reset(self):
		global number_of_states
		global cutoff_values
		global next_cutoff
		next_cutoff = 0
		self.runButton.setEnabled(False)
		self.pushButton_4.setEnabled(False)
		self.pushButton_6.setEnabled(False)
		self.pushButton_5.setEnabled(False)
		self.pushButton_2.setEnabled(True)
		self.pushButton_3.setEnabled(True)
		self.photo.setStyleSheet("border: 3px solid black;")
		for i in range(0, number_of_states):
			os.remove("./images/{}.png".format(i + 1))

	def save(self):
		global number_of_states
		self.photo.setStyleSheet("border: 3px solid black;")
		self.photo.setPixmap(QtGui.QPixmap("./images/initial_state.png"))
		loop = QEventLoop()
		QTimer.singleShot(1000, loop.quit)
		loop.exec_()
		for i in range(1, number_of_states + 1):
			self.photo.setPixmap(QtGui.QPixmap("./images/{}.png".format(i)))
			loop = QEventLoop()
			QTimer.singleShot(1000, loop.quit)
			loop.exec_()

		self.photo.setStyleSheet("border: 3px solid red;")
		self.photo.setPixmap(QtGui.QPixmap("./images/final_state.png"))

	def generatae_random_initial_state(self):
		global n
		global initial_state
		n = int(self.enterN.value())  # raise error if < 4
		initial_state = State(generate_initial_state(n), None, 0)
		plot_board(initial_state, "Initial State", "initial_state", n)
		self.photo.setPixmap(QtGui.QPixmap("./images/initial_state.png"))
		self.photo.setStyleSheet("border: 3px solid black;")
		self.runButton.setEnabled(True)

	def run_program(self):
		self.photo.setPixmap(QtGui.QPixmap("./images/wait.png"))
		loop = QEventLoop()
		QTimer.singleShot(50, loop.quit)
		loop.exec_()
		self.runButton.setEnabled(False)
		self.pushButton_2.setEnabled(False)
		self.pushButton_3.setEnabled(False)
		self.pushButton_4.setEnabled(True)
		self.pushButton_6.setEnabled(True)
		self.pushButton_5.setEnabled(True)
		global cutoff_values
		global number_of_states
		global path_queue
		global sol
		global initial_state
		global n

		sol = solution(initial_state)
		plot_board(sol, "Final State", "final_state", n)
		self.photo.setPixmap(QtGui.QPixmap("./images/final_state.png"))
		self.photo.setStyleSheet("border: 3px solid red;")
		number_of_states = len(path_queue)
		# print(number_of_states)
		for i in range(1, number_of_states + 1):
			plot_board(path_queue.pop(), "State - {}".format(i), "{}".format(i), n)

	def setupUi(self, MainWindow):
		MainWindow.setObjectName("MainWindow")
		MainWindow.resize(1268, 856)
		MainWindow.setAutoFillBackground(False)
		MainWindow.setStyleSheet("font: 10pt \"Snap ITC\";\n"
					    "\n"
					    "")
		MainWindow.setDocumentMode(False)
		MainWindow.setDockNestingEnabled(False)
		MainWindow.setUnifiedTitleAndToolBarOnMac(False)
		self.centralwidget = QtWidgets.QWidget(MainWindow)
		self.centralwidget.setObjectName("centralwidget")
		self.label_2 = QtWidgets.QLabel(self.centralwidget)
		self.label_2.setGeometry(QtCore.QRect(240, 10, 771, 51))
		font = QtGui.QFont()
		font.setFamily("Snap ITC")
		font.setPointSize(28)
		font.setBold(False)
		font.setItalic(False)
		font.setWeight(50)
		self.label_2.setFont(font)
		self.label_2.setStyleSheet("font: 28pt \"Snap ITC\";")
		self.label_2.setTextFormat(QtCore.Qt.RichText)
		self.label_2.setAlignment(QtCore.Qt.AlignCenter)
		self.label_2.setObjectName("label_2")
		self.photo = QtWidgets.QLabel(self.centralwidget)
		self.photo.setGeometry(QtCore.QRect(570, 100, 600, 500))
		self.photo.setText("")
		self.photo.setPixmap(QtGui.QPixmap("./images/initial_state.png"))
		self.photo.setScaledContents(False)
		self.photo.setObjectName("photo")
		self.runButton = QtWidgets.QPushButton(self.centralwidget)
		self.runButton.setGeometry(QtCore.QRect(770, 630, 191, 81))
		self.runButton.setStyleSheet("background-color: rgb(198, 198, 198);")
		# self.runButton.pos()
		self.runButton.setObjectName("runButton")
		self.formLayoutWidget = QtWidgets.QWidget(self.centralwidget)
		self.formLayoutWidget.setGeometry(QtCore.QRect(50, 80, 397, 601))
		self.formLayoutWidget.setObjectName("formLayoutWidget")
		self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
		self.formLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
		self.formLayout.setLabelAlignment(QtCore.Qt.AlignCenter)
		self.formLayout.setFormAlignment(QtCore.Qt.AlignCenter)
		self.formLayout.setContentsMargins(10, 0, 0, 0)
		self.formLayout.setHorizontalSpacing(20)
		self.formLayout.setVerticalSpacing(50)
		self.formLayout.setObjectName("formLayout")
		self.label_3 = QtWidgets.QLabel(self.formLayoutWidget)
		self.label_3.setAlignment(QtCore.Qt.AlignCenter)
		self.label_3.setObjectName("label_3")
		self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_3)
		self.enterN = QtWidgets.QSpinBox(self.formLayoutWidget)
		self.enterN.setMinimumSize(QtCore.QSize(0, 50))
		self.enterN.setStyleSheet("background-color: rgb(255, 255, 255);")
		self.enterN.setObjectName("enterN")
		self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.enterN)
		self.pushButton_2 = QtWidgets.QPushButton(self.formLayoutWidget)
		self.pushButton_2.setMinimumSize(QtCore.QSize(0, 50))
		self.pushButton_2.setStyleSheet("background-color: rgb(198, 198, 198);")
		self.pushButton_2.setObjectName("pushButton_2")
		self.formLayout.setWidget(1, QtWidgets.QFormLayout.SpanningRole, self.pushButton_2)
		self.pushButton_3 = QtWidgets.QPushButton(self.formLayoutWidget)
		self.pushButton_3.setMinimumSize(QtCore.QSize(0, 50))
		self.pushButton_3.setStyleSheet("background-color: rgb(198, 198, 198);")
		self.pushButton_3.setObjectName("pushButton_3")
		self.formLayout.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.pushButton_3)
		self.pushButton_4 = QtWidgets.QPushButton(self.formLayoutWidget)
		self.pushButton_4.setMinimumSize(QtCore.QSize(0, 50))
		self.pushButton_4.setStyleSheet("background-color: rgb(198, 198, 198);")
		self.pushButton_4.setObjectName("pushButton_4")
		self.formLayout.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.pushButton_4)
		self.pushButton_6 = QtWidgets.QPushButton(self.formLayoutWidget)
		self.pushButton_6.setMinimumSize(QtCore.QSize(0, 50))
		self.pushButton_6.setStyleSheet("background-color: rgb(198, 198, 198);")
		self.pushButton_6.setObjectName("pushButton_6")
		self.formLayout.setWidget(5, QtWidgets.QFormLayout.SpanningRole, self.pushButton_6)
		self.pushButton_5 = QtWidgets.QPushButton(self.formLayoutWidget)
		self.pushButton_5.setMinimumSize(QtCore.QSize(0, 50))
		self.pushButton_5.setStyleSheet("background-color: rgb(198, 198, 198);")
		self.pushButton_5.setObjectName("pushButton_5")
		self.formLayout.setWidget(4, QtWidgets.QFormLayout.SpanningRole, self.pushButton_5)
		self.label = QtWidgets.QLabel(self.centralwidget)
		self.label.setGeometry(QtCore.QRect(0, 0, 1271, 801))
		self.label.setText("")
		self.label.setPixmap(QtGui.QPixmap("./images/download.jpg"))
		self.label.setScaledContents(True)
		self.label.setAlignment(QtCore.Qt.AlignCenter)
		self.label.setObjectName("label")
		self.label.raise_()
		self.label_2.raise_()
		self.photo.raise_()
		self.runButton.raise_()
		self.formLayoutWidget.raise_()
		MainWindow.setCentralWidget(self.centralwidget)
		self.menubar = QtWidgets.QMenuBar(MainWindow)
		self.menubar.setGeometry(QtCore.QRect(0, 0, 1268, 29))
		self.menubar.setObjectName("menubar")
		MainWindow.setMenuBar(self.menubar)
		self.statusbar = QtWidgets.QStatusBar(MainWindow)
		self.statusbar.setObjectName("statusbar")
		MainWindow.setStatusBar(self.statusbar)

		self.retranslateUi(MainWindow)
		QtCore.QMetaObject.connectSlotsByName(MainWindow)

		self.enterN.setMinimum(4)

		self.reset()
		self.pushButton_4.clicked.connect(self.save)
		self.runButton.clicked.connect(self.run_program)
		self.pushButton_2.clicked.connect(self.generatae_random_initial_state)
		self.pushButton_6.clicked.connect(self.reset)
		self.pushButton_3.clicked.connect(self.custom_initial_state)
		self.pushButton_5.clicked.connect(self.information)

	def retranslateUi(self, MainWindow):
		_translate = QtCore.QCoreApplication.translate
		MainWindow.setWindowTitle(_translate("MainWindow", "N-Queens Problem"))
		self.label_2.setText(_translate("MainWindow", "N-Queens"))
		self.runButton.setText(_translate("MainWindow", "Run"))
		self.label_3.setText(_translate("MainWindow", "Enter N"))
		self.pushButton_2.setText(_translate("MainWindow", "Generate Random Initial State"))
		self.pushButton_3.setText(_translate("MainWindow", "Custom Initial State"))
		self.pushButton_4.setText(_translate("MainWindow", "Show Full path"))
		self.pushButton_6.setText(_translate("MainWindow", "Reset"))
		self.pushButton_5.setText(_translate("MainWindow", "More Information"))


class Ui_MainWindow2():

	def __init__(self):
		pass

	def submit(self):
		global ui
		global initial_state
		global input_initial_state
		global custom_initial_state_done
		custom_initial_state_done = True
		initial_state = input_initial_state
		ui.photo.setStyleSheet("border: 3px solid black;")
		plot_board(initial_state, "Initial State", "initial_state", n)
		ui.photo.setPixmap(QtGui.QPixmap("./images/initial_state.png"))
		ui.runButton.setEnabled(True)

		ui.MainWindow2.hide()

	def show_error_message(self):
		global n
		msg = QMessageBox()
		msg.setWindowTitle("Input Error")
		msg.setText("Input must be {} numbers, between 0 and {}, and separated by spaces.".format(n, n - 1))
		msg.setIcon(QMessageBox.Critical)
		x = msg.exec_()

	def check_state(self):
		global input_initial_state
		global ui
		global n
		error = False
		n = int(ui.enterN.value())
		input_state = str(self.plainTextEdit.toPlainText()).split(" ")
		if len(input_state) != n:
			error = True
			self.show_error_message()
		else:
			for i in range(0, n):
				if input_state[i].isdigit() == False:
					error = True
					self.show_error_message()
					break
				else:
					if (int(input_state[i]) >= n) | (int(input_state[i]) < 0):
						error = True
						self.show_error_message()
						break
		if not error:
			for i in range(0, n):
				input_state[i] = int(input_state[i])
			# print(input_state)
			input_initial_state = State(input_state, None, 0)
			plot_board(input_initial_state, "Your Initial State", "input_state", n)
			self.label.setPixmap(QtGui.QPixmap("./images/input_state.png"))
			self.pushButton.setEnabled(True)

	def setupUi(self, MainWindow):
		MainWindow.setObjectName("MainWindow")
		MainWindow.resize(961, 832)
		self.centralwidget = QtWidgets.QWidget(MainWindow)
		self.centralwidget.setObjectName("centralwidget")
		self.label = QtWidgets.QLabel(self.centralwidget)
		self.label.setGeometry(QtCore.QRect(180, 0, 601, 491))
		self.label.setText("")
		self.label.setPixmap(QtGui.QPixmap("../../PycharmProjects/AI-Project1/images/initial_state.png"))
		self.label.setObjectName("label")
		self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
		self.plainTextEdit.setGeometry(QtCore.QRect(110, 620, 431, 87))
		self.plainTextEdit.setPlainText("")
		self.plainTextEdit.setBackgroundVisible(False)
		self.plainTextEdit.setStyleSheet("font: 12pt \"Snap ITC\";")
		self.plainTextEdit.setCenterOnScroll(False)
		self.plainTextEdit.setObjectName("plainTextEdit")
		self.label_2 = QtWidgets.QLabel(self.centralwidget)
		self.label_2.setGeometry(QtCore.QRect(50, 500, 561, 91))
		self.label_2.setStyleSheet("font: 12pt \"Snap ITC\";")
		self.label_2.setAlignment(QtCore.Qt.AlignCenter)
		self.label_2.setObjectName("label_2")
		self.label_3 = QtWidgets.QLabel(self.centralwidget)
		self.label_3.setGeometry(QtCore.QRect(-40, -80, 1001, 861))
		self.label_3.setStyleSheet("font: 20pt \"Snap ITC\";")
		self.label_3.setText("")
		self.label_3.setPixmap(QtGui.QPixmap("../../Downloads/download.jpg"))
		self.label_3.setScaledContents(True)
		self.label_3.setObjectName("label_3")
		self.pushButton = QtWidgets.QPushButton(self.centralwidget)
		self.pushButton.setGeometry(QtCore.QRect(680, 620, 211, 61))
		self.pushButton.setStyleSheet("font: 16pt \"Snap ITC\";")
		self.pushButton.setObjectName("pushButton")
		self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
		self.pushButton_2.setGeometry(QtCore.QRect(680, 540, 211, 61))
		self.pushButton_2.setStyleSheet("font: 16pt \"Snap ITC\";")
		self.pushButton_2.setObjectName("pushButton_2")
		self.label_3.raise_()
		self.label.raise_()
		self.plainTextEdit.raise_()
		self.label_2.raise_()
		self.pushButton.raise_()
		self.pushButton_2.raise_()
		MainWindow.setCentralWidget(self.centralwidget)
		self.menubar = QtWidgets.QMenuBar(MainWindow)
		self.menubar.setGeometry(QtCore.QRect(0, 0, 961, 26))
		self.menubar.setObjectName("menubar")
		MainWindow.setMenuBar(self.menubar)
		self.statusbar = QtWidgets.QStatusBar(MainWindow)
		self.statusbar.setObjectName("statusbar")
		MainWindow.setStatusBar(self.statusbar)

		self.pushButton_2.clicked.connect(self.check_state)
		self.retranslateUi(MainWindow)
		QtCore.QMetaObject.connectSlotsByName(MainWindow)
		self.pushButton.setEnabled(False)
		self.pushButton.clicked.connect(self.submit)

	def retranslateUi(self, MainWindow):
		_translate = QtCore.QCoreApplication.translate
		MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
		self.label_2.setText(_translate("MainWindow", "Enter the positions of queens in each column\n"
								    " seperated by a space.\n"
								    "ex: 1 2 3 4 ....."))
		self.pushButton.setText(_translate("MainWindow", "Submit"))
		self.pushButton_2.setText(_translate("MainWindow", "Check State"))


if __name__ == "__main__":
	import sys

	app = QtWidgets.QApplication(sys.argv)
	MainWindow = QtWidgets.QMainWindow()
	ui = Ui_MainWindow()
	ui.setupUi(MainWindow)
	MainWindow.show()
	sys.exit(app.exec_())
